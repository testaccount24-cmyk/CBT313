                        Why use ISPF Edit Labels?

That is a question that I've been asked by many who have rarely, if
ever, used Edit Labels and for which I hope this helps.

What are ISPF Edit Labels

   ISPF Edit Labels are user defined labels that begin with a period and
   overlay the record sequence number. Labels can be easily located
   using the Locate command:  L .label

   ISPF Edit Labels are typically used to limit the range of action for
   some ISPF commands, and Edit Compare uses them to identify inserted
   or changed records.

   An ISPF Edit Label must be all alphabetic characters and are always
   upper case (if entered in lower case they are converted to upper
   case).

   Some examples:

   1. User generated labels:

   .EXEC  //SYMBOLS  EXEC PGM=IEBGENER
   000009 //SYSIN    DD  DUMMY
   000010 //SYSUT1   DD  *,SYMBOLS=EXECSYS
   .DATA   Test name  &NAME

   2. Labels generated by ISPF Edit Compare:

   000001 //T311LBDD JOB XXXEXCP9,T311LBD,
   ====== //          NOTIFY=T311LBD,MSGCLASS=R
   ====== //OUT       OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)
   .OAAAA //             NOTIFY=T311LBD,MSGCLASS=R
   .OAAAB //OUT      OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)
   000004 //DISKMAP EXEC PGM=DISKMAP,PARM='MAP'

   Since the sequence numbers are only 6 characters, and labels must
   start with a period, that leaves 5 alphabetic characters for the
   label.

First why would anyone use ISPF Edit Labels?

   To start with ISPF Edit Labels are transient. They go away when the
   user uses RESET ALL, RESET LABEL, or just ends the ISPF Edit session.
   This makes the time and effort of creating them, only to have them
   cease to exist, a waste of time.

   Another reason to not use ISPF Edit Labels is that there is no easy
   way to get a list of the active labels. Thus if your memory suffers
   short term memory failures, the labels can only be found with
   scrolling or using the Locate Label Next command.

   Now if ISPF Edit Labels could be retained across ISPF Edit sessions
   that would make them infinitely more usable.  They would be even
   more useful if they could be shared with others who are working on
   the same data.

   If the ISPF Edit Labels are meaningful and it is easy to find the
   names of the active labels, then they are worth using.

Using ISPF Edit Labels with the SAVELAB Extension

   The ISPF Edit SAVELAB Extension is an ISPF Edit Macro (command) that
   makes using ISPF Edit Labels worthwhile. It does this by making it
   easy to save, list, and restore ISPF Edit Labels.

   The options available with SAVELAB are:

   ERASE  (ERA) - Completely erase the ALL saved labels for ALL members
   EXPORT (EX)  - Export the saved label set to a PDS
                - EX pds-dsname
                - Performs a Save first
   FREE   (F)   - Free saved labels for this member
                - FREE # (see Show Sum for the #) to free others
   HELP   (H)   - Show this help info - alias is ?
   IMAC   (IM)  - Option for an Initial Macro use to bypass messages and
                  if no labels are found then bypass configuring to auto
                  save labels.
   IMPORT (IM)  - Import the saved label set from a PDS
                - IM pds-dsname
   LIST   (L)   - List all Active labels in the data
   QUIET  (Q)   - Option for an Initial Macro use to bypass messages
   SAVE   (S)   - Save all labels
   SHOW   (SH)  - Show the ISPF variable info on the saved labels
   SHOW ALL (SH A) - Show all members with saved labels
   SHOW SUM (SH S) - Show a summary all saved label sets

   When used with no options SAVELAB will restore the saved label set
   for the member.  The saved label set is saved in a ISPF Table in
   the ISPPROF dataset.

   Note that during the Label restore process a comparison is made
   between the number of records in the member at the time of the save
   and at the time of the restore. If the count is different then a
   warning message is issued informing the user that it is very possible
   that labels were restored on incorrect records.

   The Save option will save all active ISPF Edit labels in the ISPF
   Table using the dataset name and member as the key.

   The ISPF Edit labels are saved in the table using ISPF variables.

   When SAVELAB is used during the ISPF Edit Session it will
   configure the ISPF Edit END command to call the SAVELABE routine
   which will perform a SAVELAB Save, then an ISPF Edit SAVE, and then
   exit ISPF Edit. This is to help ensure that the active labels are
   saved. It will also define SL as an alias of SAVELAB for the life of
   the ISPF Edit session.

   Beware: If you use ISPF Edit Compare, or some other ISPF Edit
   commands, that some reset all labels and generate their own. Thus to
   make sure that only your labels are saved it is important that after
   using one of these types of commands that the ISPF Edit RESET LABEL
   be used followed by the SAVELAB command to restore your labels.

   The SHOW option by itself will display all of the active members
   saved label set. Adding ALL will display all of the saved label sets.
   Adding SUM, instead of ALL, will display a summary of all saved label
   sets along with a number that can be used with the FREE option to
   free up space in the ISPF Profile variable.

   The IMport and EXport options utilize an external PDS, or PDSE, to
   store the saved label set for the member. The member name in the data
   set is the active member name being Edited. This means if Editing the
   same name in multiple data sets that the EXport data set should be
   unique or the saved label set of JCL member XYZ would overlay the
   saved label set of REXX member XYZ, causing a lot of confusion in the
   use of the restored labels.

   The syntax for IMport and EXport requires a parameter of the target
   PDS, or PDSE, to be specified:

        e.g. EXport SL.PDSE
             EXport SL.PDSE

   If the data set does not exist then it will be allocated as a PDSE
   using a primary and secondary space of 15 tracks. As a PDSE there is
   no need to define directory blocks.
