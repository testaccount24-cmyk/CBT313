TMAILQRY TITLE 'TSO MAIL QUERY COMMAND'
*---------------------------------------------------------------------*
* MODULE NAME: TMAILQRY                                               *
*---------------------------------------------------------------------*
* FUNCTION   : THIS IS A TSO COMMAND THAT WILL BE USED                *
*              TO TEST FOR MAIL TO BE RECEIVED FOR THE USER           *
*                                                                     *
*        THIS IS ACCOMPLISHED BY USING THE SUBSYSTEM REQUEST          *
*        TO GET INFORMATION ON THE FIRST SYSOUT DATA SET IN THE       *
*        PUNCH SYSOUT CLASS WITH AN EXTERNAL WRITER NAME OF           *
*        THE CURRENT TSO SESSION (JOB NAME FROM TIOT).                *
*                                                                     *
*        RETURN CODES:  0  - MAIL WAITING TO BE RECEIVED              *
*                       >0 - NO MAIL TO RECEIVE                       *
*---------------------------------------------------------------------*
* SYNTAX:  TMAILQRY                                                   *
*       OR                                                            *
*          TMAILQRY USERID                                            *
*---------------------------------------------------------------------*
*  LKED ATTRIBUTES:  AUTHORIZED,  RENT, REUS                          *
*                                                                     *
*  UPDATE SYS1.PARMLIB MEMBER IKJTSO?? TO ADD THIS AS AN AUTHORIZED   *
*   TSO COMMAND.                                                      *
*                                                                     *
*  IF USING ACF2 COMMAND LIMITING THEN ALSO ADD THIS COMMAND TO THAT  *
*     TABLE.                                                          *
*---------------------------------------------------------------------*
*         AUTHOR:    LIONEL B. DYCK                                   *
*                    KAISER PERMANENTE INFORMATION TECHNOLOGY         *
*                    25 N. VIA MONTE AVE.                             *
*                    WALNUT CREEK, CA 94598                           *
*                    (925) 926-5332                                   *
*                    INTERNET: LIONEL.B.DYCK@KP.ORG                   *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*        LOCAL MACROS                                                 *
*---------------------------------------------------------------------*
         PRINT OFF
         MACRO
&LABEL   $PROLOG &LV=0,&GM=Y
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
         GBLC  &PROGM
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         AIF   ('&GM' EQ 'N').NOGM
&PROGM   SETC  'GETMAIN'
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
         AGO   .STORE
.NOGM    ANOP
         CNOP  0,4
         LA    R1,SAVE&SYSNDX
         B     *+76
SAVE&SYSNDX DC 18F'0'
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
         $REGS
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
         MACRO
&LABEL   $EPILOG &RC
         GBLC  &PROGM
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         AIF   ('&PROGM' NE 'GETMAIN').NOFREE
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         AGO   .LM
.NOFREE  ANOP
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
.LM      ANOP
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
         MACRO
         $REGS
         GBLB  &PRORG
         AIF   (&PRORG).MEX2
&PRORG   SETB  1
 SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
 SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
 SPACE
.MEX2    ANOP
         MEND
         PRINT ON
         EJECT
TMAILQRY $PROLOG 12,LV=1000
         USING WORK,R13
         EJECT
*---------------------------------------------------------------------*
*        GET USERID TO TEST FROM PARM OR TIOT                         *
*---------------------------------------------------------------------*
         L     R1,0(R1)
         LH    R2,2(R1)          LOAD OFFSET
         LH    R3,0(R1)          LOAD LEN
         SR    R3,R2
         SH    R3,=H'04'         LESS HEADER
         LTR   R3,R3             ANY LENGTH ?              *LBD 04/93*
         BZ    DOTIOT            ZERO SO GET FROM TIOT     *LBD 04/93*
         CH    R3,=H'07'         ELSE CHECK LENGTH
         BH    DOTIOT            TOO LONG - IGNORE
         AR    R1,R2             -> PARM
         LA    R1,4(R1)          SKIP CMD HEADER
         CLI   0(R1),C' '        CHECK FOR VALID PARM
         BE    DOTIOT            NO PARM REALLY
         SH    R3,=H'01'         LESS 1 FOR MVC
         EX    R3,MVCMD
         OC    CMDPARM,=CL8' '   INSURE UPPER CASE
         LA    R5,CMDPARM        -> SET POINTER FOR USERID
         B     SETSSOB
MVCMD    MVC   CMDPARM(0),0(R1)
DOTIOT   DS    0H
         L     R5,16             -> CVT
         L     R5,0(,R5)         -> TCB WORDS
         L     R5,0(,R5)         -> MY TCB
         L     R5,12(,R5)        -> MY TIOT
         LA    R5,0(,R5)         -> MY JOBNAME
         SPACE 2
*---------------------------------------------------------------------*
*        SET UP SSOB FOR SPOOL ACCESS                                 *
*---------------------------------------------------------------------*
         SPACE
SETSSOB  DS    0H
         LA    R4,XSSOB           GET SSOB EXTENSION ADDR
         ST    R4,SSOBPARM           SAVE IT IN SSOB
         OI    SSOBPARM,X'80'          AND SET FLAG
         XC    XSSOB,XSSOB           AND ZERO WORK AREA
         LA    R4,XSSOB
         USING SSOB,R4
         MVC   SSOBID,=C'SSOB'     INITIALIZE SSOB
         MVC   SSOBLEN,=AL2(SSOBHSIZ)
         MVC   SSOBFUNC,=AL2(SSOBSOUT)
         MVC   SSSOLEN,=AL2(SSSOSIZE)
         OI    SSSOFLG1,SSSOSPGM   SET WTR NAME SELECTION FLAG
         MVC   SSSOPGMN,0(R5)      SET JOBNAME INTO SSOB
         LA    R1,SSOBGN
         ST    R1,SSOBINDV
         MVC   SSSOCLSL,CLASS      SET CLASS FOR MAIL
         EJECT
*---------------------------------------------------------------------*
*        ISSUE SUB SYSTEM REQUEST FOR FIRST SPOOL DATA-SET            *
*---------------------------------------------------------------------*
         MODESET MODE=SUP,KEY=ZERO
         XC    SSSOFLG2,SSSOFLG2
         XC    SSSODSN,SSSODSN
         XC    SSSOUFLG,SSSOUFLG
         LA    R1,SSOBPARM
         IEFSSREQ
         LR    R2,R15              SAVE RTN CODE
         MODESET MODE=PROB,KEY=NZERO
         LTR   R2,R2
         BNZ   EXIT8
CKRTN    CLC   SSOBRETN,=AL4(SSSORTOK)
         BE    EXIT0
         CLC   SSOBRETN,=AL4(SSSOEODS)
         BE    EXIT4
         CLC   SSOBRETN,=AL4(SSSOUNAV)
         BE    EXIT16
         CLC   SSOBRETN,=AL4(SSSODUPJ) DUPLICATE JOB #
         BE    EXIT0               GET JOB ID FROM SSIB
         B     EXIT12
EXIT0    EQU   *
         LA    R2,0
         B     EXIT
EXIT4    EQU   *
         LA    R2,4
         B     EXIT
EXIT8    EQU   *
         LA    R2,8
         B     EXIT
EXIT12   EQU   *
         LA    R2,12
         B     EXIT
EXIT16   EQU   *
         LA    R2,16
EXIT     DS    0H
         OI    SSSOFLG2,SSSOCTRL
         MODESET MODE=SUP,KEY=ZERO
         LA    R1,SSOBPARM
         IEFSSREQ
         MODESET MODE=PROB,KEY=NZERO
         LR    R15,R2            SET RETURN CODE
         $EPILOG ,
         EJECT
*---------------------------------------------------------------------*
*        DATA AREAS                                                   *
*---------------------------------------------------------------------*
         LTORG
         SPACE 2
CLASS    DC    CL8'B '             PUNCH SYSOUT CLASS FOR MAIL
         SPACE 2
         EJECT
*---------------------------------------------------------------------*
*        MAPPING MACROS                                               *
*---------------------------------------------------------------------*
WORK     DSECT
         DS    18F
SSOBPARM DS    F
         DS    0D
XSSOB    DS    140X
CMDPARM  DS    CL8
         TITLE 'SSOB'
         IEFJSSOB SO
         TITLE 'SSIB'
         IEFJSSIB
         TITLE 'JES CT'
         IEFJESCT
         TITLE 'CVT'
         CVT   DSECT=YES,LIST=YES
         END
